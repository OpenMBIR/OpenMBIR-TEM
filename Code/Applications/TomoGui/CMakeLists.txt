#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2011, Michael A. Jackson. BlueQuartz Software

#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#-- This code was partly written under US Air Force Contract FA8650-07-D-5800
#--
#--////////////////////////////////////////////////////////////////////////////
Project(TomoGui)
cmake_minimum_required(VERSION 2.8)




# ------------------------------------------------------------------------------
#  Qt 4 Section
# ------------------------------------------------------------------------------
if(QT4_FOUND)
    include( ${QT_USE_FILE} )
    CMP_COPY_QT4_RUNTIME_LIBRARIES( "QtSvg;QtScript" )
    CMP_QT_LIBRARIES_INSTALL_RULES("QtSvg;QtScript" ".")
else()
    message(FATAL_ERROR "Qt 4 is Needed for this project.")
endif(QT4_FOUND)

# Set the GUI type for different platforms
SET(GUI_TYPE )


# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${PROJECT_CODE_DIR} )
include_directories( ${PROJECT_CODE_DIR}/Applications )
include_directories( ${PROJECT_CODE_DIR}/Applications/TomoGui )
include_directories( ${PROJECT_CODE_DIR}/QtSupport )
include_directories( ${TomoGui_BINARY_DIR} )
include_directories( ${EIMTomo_BINARY_DIR}/QtSupport )

# --------------------------------------------------------------------
# Set up all the source codes
SET( TomoGui_SRCS
  ${TomoGui_SOURCE_DIR}/main.cpp
  ${TomoGui_SOURCE_DIR}/TomoGui.cpp
  ${TomoGui_SOURCE_DIR}/TomoGuiGraphicsView.cpp
  ${TomoGui_SOURCE_DIR}/TomoEngineTask.cpp
  ${TomoGui_SOURCE_DIR}/LayersDockWidget.cpp
  ${TomoGui_SOURCE_DIR}/GainsOffsetsTableModel.cpp
  ${TomoGui_SOURCE_DIR}/CheckBoxDelegate.cpp
  )

# another list, this time it includes all header files that should 
#  be treated with moc
SET( TomoGui_MOC_HDRS
  ${TomoGui_SOURCE_DIR}/TomoGui.h
  ${TomoGui_SOURCE_DIR}/TomoGuiGraphicsView.h
  ${TomoGui_SOURCE_DIR}/TomoEngineTask.h
  ${TomoGui_SOURCE_DIR}/LayersDockWidget.h
  ${TomoGui_SOURCE_DIR}/GainsOffsetsItemDelegate.h
  ${TomoGui_SOURCE_DIR}/GainsOffsetsTableModel.h
  ${TomoGui_SOURCE_DIR}/CheckBoxDelegate.h
)
cmp_IDE_SOURCE_PROPERTIES(TomoGui "${TomoGui_MOC_HDRS}" "${TomoGui_SRCS}" "0")



# The UI files (As generated by Qt Designer
SET( TomoGui_UIS
 ${TomoGui_SOURCE_DIR}/UI_Files/TomoGui.ui
 ${TomoGui_SOURCE_DIR}/UI_Files/LayersDockWidget.ui
)
cmp_IDE_SOURCE_PROPERTIES(TomoGui/UI_Files "${TomoGui_UIS}" "" "0")

# Organize the .qrc files that were generated from the various license files
cmp_IDE_GENERATED_PROPERTIES(TomoGui/Generated/License "${QRC_LICENSE_FILES}" "" "0")

# and finally any resource files
SET( TomoGui_RCS
 ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc
)
cmp_IDE_SOURCE_PROPERTIES(TomoGui/QrcFiles "${TomoGui_RCS}" "" "0")

# -- Run MOC and UIC on the necessary files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${TomoGui_RCS}  ${QRC_LICENSE_FILES})

# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${TomoGui_UIS} )

# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${TomoGui_MOC_HDRS} )

#-- Put the generated files into their own group for IDEs
cmp_IDE_GENERATED_PROPERTIES(TomoGui/Generated "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")


# -- Finally set the Project Sources to include all the sources
SET (${PROJECT_NAME}_PROJECT_SRCS 
  ${TomoGui_SRCS} 
  ${TomoGui_MOC_HDRS}
  ${TomoGui_HDRS}
  ${Generated_RC_SRCS} 
  ${Generated_UI_HDRS} 
  ${Generated_MOC_SRCS}
)

IF(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns)
ENDIF (APPLE)

IF(Q_WS_WIN)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/${PROJECT_NAME}.ico)
ENDIF(Q_WS_WIN)

# Clear the file first otherwise we get duplicates
file(WRITE ${PROJECT_BINARY_DIR}/Qt_Plugins.txt "")
FindQt4Plugins("qgif;qjpeg;qtiff" "${PROJECT_BINARY_DIR}/Qt_Plugins.txt" 
                "${PROJECT_BINARY_DIR}/LibSearchDirs.txt" 
                "imageformats" )
                
file(READ ${PROJECT_BINARY_DIR}/Qt_Plugins.txt QT_PLUGINS)
BuildQtAppBundle(
    TARGET ${PROJECT_NAME}
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE  ${APPLICATION_ICON}
    VERSION_MAJOR ${QTomoGui_VER_MAJOR}
    VERSION_MINOR ${QTomoGui_VER_MINOR}
    VERSION_PATCH ${QTomoGui_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES ${QT_LIBRARIES} QtSupport TomoEngine
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    QT_PLUGINS    ${QT_PLUGINS}
#        OTHER_PLUGINS ${OTHER_PLUGINS}
    COMPONENT     Applications
    INSTALL_DEST  "."
)   


